{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19174\\\\Downloads\\\\paint-on-canvas-main\\\\src\\\\WebPainter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebPainter = () => {\n  _s();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [color, setColor] = useState('#000000');\n  const [isErasing, setIsErasing] = useState(false);\n  const canvasRef = useRef(null);\n\n  // Initializes a blank canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.getContext('2d').lineJoin = 'round';\n    canvas.getContext('2d').lineCap = 'round';\n  }, []);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const ctx = canvasRef.current.getContext('2d');\n    setIsDrawing(true);\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = isErasing ? 'white' : color;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: color,\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"50\",\n        value: lineWidth,\n        onChange: e => setLineWidth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsErasing(!isErasing),\n        children: isErasing ? \"Paint Mode\" : \"Erase Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas-element\",\n      width: \"800\",\n      height: \"600\",\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(WebPainter, \"T/cWmTK3qhLxDuprAvX+WDDu8xI=\");\n_c = WebPainter;\nexport default WebPainter;\nvar _c;\n$RefreshReg$(_c, \"WebPainter\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","WebPainter","_s","isDrawing","setIsDrawing","lineWidth","setLineWidth","color","setColor","isErasing","setIsErasing","canvasRef","canvas","current","getContext","lineJoin","lineCap","startDrawing","nativeEvent","offsetX","offsetY","ctx","beginPath","moveTo","draw","strokeStyle","lineTo","stroke","stopDrawing","clearCanvas","clearRect","width","height","children","className","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","min","max","onClick","ref","id","onMouseDown","onMouseMove","onMouseUp","onMouseOut","_c","$RefreshReg$"],"sources":["C:/Users/19174/Downloads/paint-on-canvas-main/src/WebPainter.js"],"sourcesContent":["\nimport React, { useState, useRef, useEffect } from 'react';\nimport './style.css'; \nconst WebPainter = () => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [color, setColor] = useState('#000000');\n  const [isErasing, setIsErasing] = useState(false);\n  const canvasRef = useRef(null);\n\n  // Initializes a blank canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.getContext('2d').lineJoin = 'round';\n    canvas.getContext('2d').lineCap = 'round';\n  }, []);\n\n  const startDrawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    const ctx = canvasRef.current.getContext('2d');\n    setIsDrawing(true);\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = nativeEvent;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = isErasing ? 'white' : color;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return (\n    <div>\n      <div className=\"control-panel\">\n        <input type=\"color\" value={color} onChange={(e) => setColor(e.target.value)} />\n        <input type=\"range\" min=\"1\" max=\"50\" value={lineWidth} onChange={(e) => setLineWidth(e.target.value)} />\n        <button onClick={() => setIsErasing(!isErasing)}>{isErasing ? \"Paint Mode\" : \"Erase Mode\"}</button>\n        <button onClick={clearCanvas}>Clear Canvas</button>\n      </div>\n      <canvas\n        ref={canvasRef}\n        id=\"canvas-element\"\n        width=\"800\"\n        height=\"600\"\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default WebPainter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}